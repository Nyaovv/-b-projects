import os
import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import (
    Application, CommandHandler, CallbackQueryHandler, 
    ContextTypes, MessageHandler, filters
)

from config import BOT_TOKEN, WEBAPP_URL
from database import init_db, get_or_create_user, get_user_settings, update_user_settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user = update.effective_user
    user_id = user.id
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    get_or_create_user(user_id)
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton(
            "–û—Ç–∫—Ä—ã—Ç—å RestApp üåô", 
            web_app=WebAppInfo(url=f"{WEBAPP_URL}")
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        f"–≠—Ç–æ <b>RestApp</b> - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ –∏ —Å–Ω–∞.\n\n"
        f"‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–∞–π–º–µ—Ä\n"
        f"‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â–∏–π –∑–≤—É–∫\n"
        f"‚Ä¢ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Å–ø–æ–∫–æ–π–Ω—ã–º —Å–Ω–æ–º\n\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
        parse_mode="HTML",
        reply_markup=reply_markup
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    await update.message.reply_text(
        "üåô <b>RestApp - –ü–æ–º–æ—â—å</b>\n\n"
        "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º:\n\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å RestApp¬ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞\n"
        "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä–µ–º—è —Ç–∞–π–º–µ—Ä–∞ —Å –ø–æ–º–æ—â—å—é —Å–ª–∞–π–¥–µ—Ä–∞\n"
        "3. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞ –∏–ª–∏ –≤—ã—Ö–æ–¥)\n"
        "4. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ü–µ–Ω—É —Å –ø—Ä–∏—è—Ç–Ω—ã–º –∑–≤—É–∫–æ–º\n"
        "5. –ù–∞–∂–º–∏—Ç–µ ¬´–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä¬ª\n\n"
        "<i>–°–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:</i> –±—ã—Å—Ç—Ä–æ –Ω–∞–∂–º–∏—Ç–µ 5 —Ä–∞–∑ –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ –¥—ã—Ö–∞–Ω–∏—è üí®",
        parse_mode="HTML"
    )

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about."""
    await update.message.reply_text(
        "üåô <b>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ RestApp</b>\n\n"
        "RestApp - —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ –∏ —Å–Ω–∞, –ø–æ–º–æ–≥–∞—é—â–µ–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è "
        "–ø–æ–¥ –ø—Ä–∏—è—Ç–Ω—ã–µ –∑–≤—É–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞–π–º–µ—Ä.\n\n"
        "Telegram-–≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ RestApp.\n\n"
        "¬© 2023 RestApp",
        parse_mode="HTML"
    )

async def webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    try:
        user_id = update.effective_user.id
        data = json.loads(update.effective_message.web_app_data.data)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_user_settings(user_id, data)
        
        await update.message.reply_text(
            "‚úÖ –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!",
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"Error processing webapp data: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    init_db()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("about", about_command))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, webapp_data))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
